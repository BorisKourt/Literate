@code_type d .d
@comment_type // %s

@title Util

@s Introduction

This file contains some utilities for the rest of the literate program.

It has functions for reading the entire source of a file, and functions
for reporting errors and warnings.

--- util.d
import std.stdio;
import std.string;

@{readall function}
@{error function}
@{warning function}
@{realname function}
@{leadingWS function}
---

@s Readall

The `readall` function reads an entire text file, or
reads from stdin until `control-d` is pressed, and returns the string.

--- readall function
// Read from a file
string readall(File file) {
    string src = "";
    while (!file.eof) {
        src ~= file.readln();
    }
    file.close();
    return src;
}

// Read from stdin
string readall() {
    string src = "";
    string line;
    while ((line = readln()) !is null) {
        src ~= line;
    }
    return src;
}
---

@s Error and Warning

These functions simply write errors or warnings to stdout.

--- error function
void error(string file, int line, string message) {
    writeln(file, ":", line, ":error:", message);
}
---

--- warning function
void warn(string file, int line, string message) {
    writeln(file, ":", line, ":warning:", message);
}
---

@s Realname function

Sometimes a block name will be `name +=` and here it is useful to strip
off the end `+=` because that is not really part of the block name. This
function does that.

--- realname function
string realname(string name) {
    name = strip(name);
    if (name.endsWith("+=") || name.endsWith(":=")) {
        return strip(name[0..$ - 2]);
    } else {
        return name;
    }
}
---

@s Leading Whitespace function

This function returns the leading whitespace of the input string.

--- leadingWS function
string leadingWS(string str) {
    auto firstChar = str.indexOf(strip(str)[0]);
    return str[0..firstChar];
}
---
